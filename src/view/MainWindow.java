/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.io.IOException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import java.io.FileInputStream;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import model.circuit.CircuitEuc;
import model.circuit.CircuitGeo;
import model.coord.Coord;
import model.coord.CoordEuc;
import model.coord.CoordGeo;
import view.waypoint.Waypoint;
import view.waypoint.WaypointEuc;

/**
 *
 * @author ugola
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        Waypoint.loadImage();
        initComponents();
        mainPane.resetToPreferredSizes();
        sidePanel.resetToPreferredSizes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPane = new javax.swing.JSplitPane();
        layeredPane = new javax.swing.JLayeredPane();
        mapGeo = new view.MapGeo();
        mapEuc = new view.MapEuc();
        zoomLabelPanel = new javax.swing.JPanel();
        scaleLabel = new java.awt.Label();
        sidePanel = new javax.swing.JSplitPane();
        tabbedPane = new javax.swing.JTabbedPane();
        algorithmPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        distancePanel = new javax.swing.JPanel();
        detailsPanel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        idValueLabel = new javax.swing.JLabel();
        xLabel = new javax.swing.JLabel();
        yLabel = new javax.swing.JLabel();
        xField = new javax.swing.JTextField();
        yField = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openFileMenuItem = new javax.swing.JMenuItem();
        closeFileMenuItem = new javax.swing.JMenuItem();
        windowMenu = new javax.swing.JMenu();
        resetMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fête des Lumières");

        mainPane.setDividerLocation(700);
        mainPane.setResizeWeight(0.7);

        mapGeo.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                mapGeoMouseWheelMoved(evt);
            }
        });
        mapGeo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mapGeoMouseReleased(evt);
            }
        });

        mapEuc.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                mapEucMouseWheelMoved(evt);
            }
        });
        mapEuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mapEucMouseReleased(evt);
            }
        });

        zoomLabelPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        scaleLabel.setAlignment(java.awt.Label.CENTER);
        scaleLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        scaleLabel.setText("x 1.0");

        javax.swing.GroupLayout zoomLabelPanelLayout = new javax.swing.GroupLayout(zoomLabelPanel);
        zoomLabelPanel.setLayout(zoomLabelPanelLayout);
        zoomLabelPanelLayout.setHorizontalGroup(
            zoomLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 63, Short.MAX_VALUE)
            .addGroup(zoomLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scaleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
        );
        zoomLabelPanelLayout.setVerticalGroup(
            zoomLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
            .addGroup(zoomLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scaleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scaleLabel.getAccessibleContext().setAccessibleParent(layeredPane);

        layeredPane.setLayer(mapGeo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPane.setLayer(mapEuc, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPane.setLayer(zoomLabelPanel, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout layeredPaneLayout = new javax.swing.GroupLayout(layeredPane);
        layeredPane.setLayout(layeredPaneLayout);
        layeredPaneLayout.setHorizontalGroup(
            layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapGeo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapEuc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layeredPaneLayout.createSequentialGroup()
                    .addGap(0, 633, Short.MAX_VALUE)
                    .addComponent(zoomLabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layeredPaneLayout.setVerticalGroup(
            layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 628, Short.MAX_VALUE)
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapGeo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapEuc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layeredPaneLayout.createSequentialGroup()
                    .addGap(0, 596, Short.MAX_VALUE)
                    .addComponent(zoomLabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        mainPane.setLeftComponent(layeredPane);

        sidePanel.setDividerLocation(325);
        sidePanel.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        sidePanel.setResizeWeight(0.6);
        sidePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton1.setText("aleatoire");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("glouton");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");

        javax.swing.GroupLayout algorithmPanelLayout = new javax.swing.GroupLayout(algorithmPanel);
        algorithmPanel.setLayout(algorithmPanelLayout);
        algorithmPanelLayout.setHorizontalGroup(
            algorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(algorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(268, Short.MAX_VALUE))
        );
        algorithmPanelLayout.setVerticalGroup(
            algorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Algorithmes", algorithmPanel);

        javax.swing.GroupLayout distancePanelLayout = new javax.swing.GroupLayout(distancePanel);
        distancePanel.setLayout(distancePanelLayout);
        distancePanelLayout.setHorizontalGroup(
            distancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
        );
        distancePanelLayout.setVerticalGroup(
            distancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Tableau des distances", distancePanel);

        sidePanel.setLeftComponent(tabbedPane);
        tabbedPane.getAccessibleContext().setAccessibleName("tabbedPane");

        detailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Détails du lieu"));
        detailsPanel.setName("Détails"); // NOI18N
        detailsPanel.setLayout(new java.awt.GridBagLayout());

        idLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idLabel.setText("ID :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(idLabel, gridBagConstraints);

        idValueLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idValueLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(idValueLabel, gridBagConstraints);

        xLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        xLabel.setText("X :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        detailsPanel.add(xLabel, gridBagConstraints);

        yLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        yLabel.setText("Y :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        detailsPanel.add(yLabel, gridBagConstraints);

        xField.setColumns(4);
        xField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        xField.setText("0");
        xField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(xField, gridBagConstraints);

        yField.setColumns(4);
        yField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        yField.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(yField, gridBagConstraints);

        sidePanel.setRightComponent(detailsPanel);

        mainPane.setRightComponent(sidePanel);

        fileMenu.setText("Fichier");

        openFileMenuItem.setText("Ouvrir une carte");
        openFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openFileMenuItem);

        closeFileMenuItem.setText("Fermer la carte");
        closeFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeFileMenuItem);

        menuBar.add(fileMenu);

        windowMenu.setText("Fenêtre");

        resetMenuItem.setText("Réinitialiser");
        resetMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(resetMenuItem);

        menuBar.add(windowMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileMenuItemActionPerformed
        JFileChooser selectionWindow = new JFileChooser();
        selectionWindow.showOpenDialog(mainPane);

        if (selectionWindow.getSelectedFile() != null) {
            String path = selectionWindow.getSelectedFile().getAbsolutePath();
            String type = fileType(path);
            closeMap();

            switch (type) {
                case "EUC_2D":
                    currentCircuitEuc = new CircuitEuc();
                    currentCircuitEuc.loadFile(path);
                    mapEuc.open(currentCircuitEuc.getCoords());
                    SwingUtilities.invokeLater(() -> {
                        if (mapGeo != null)
                            if (mapGeo.isVisible()) {
                                mapGeo.setVisible(false);
                            }
                        
                        mapEuc.setVisible(true);
                        mainPane.repaint();
                    });
                    break;

                case "GEO":
                    currentCircuitGeo = new CircuitGeo();
                    currentCircuitGeo.loadFile(path);
                    mapGeo.open(currentCircuitGeo.getCoords());
                    SwingUtilities.invokeLater(() -> {
                        if (mapEuc != null)
                            if (mapEuc.isVisible()) {
                                mapEuc.setVisible(false);
                            }
                        
                        mapGeo.setVisible(true);
                        mainPane.repaint();
                    });
                    break;
                    
                default: JOptionPane.showMessageDialog(mainPane, "Le type de fichier n'est pas pris en charge", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_openFileMenuItemActionPerformed

    private void closeFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFileMenuItemActionPerformed
        closeMap();
    }//GEN-LAST:event_closeFileMenuItemActionPerformed

    private void mapEucMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_mapEucMouseWheelMoved
        scaleLabel.setText("x " + String.format("%.1f", mapEuc.getScale()));
    }//GEN-LAST:event_mapEucMouseWheelMoved

    private void resetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetMenuItemActionPerformed
        mainPane.resetToPreferredSizes();
        sidePanel.resetToPreferredSizes();
    }//GEN-LAST:event_resetMenuItemActionPerformed

    private void mapGeoMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_mapGeoMouseWheelMoved
        scaleLabel.setText("x " + String.format("%.1f", mapGeo.getScale()));
    }//GEN-LAST:event_mapGeoMouseWheelMoved

    private void mapGeoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapGeoMouseReleased

    }//GEN-LAST:event_mapGeoMouseReleased

    private void xFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xFieldActionPerformed

    private void mapEucMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapEucMouseReleased
        WaypointEuc waypoint = mapEuc.getSelectedWaypoint();
        if (waypoint != null) {
            CoordEuc coord = waypoint.getCoord();
            idValueLabel.setText(String.valueOf(coord.getId()));
            xField.setText(String.valueOf(coord.getX()));
            yField.setText(String.valueOf(coord.getY()));
        }
    }//GEN-LAST:event_mapEucMouseReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(mapEuc.isOpen()){
                List<CoordEuc> meilleur = currentCircuitEuc.bestGreedyAlgorithm();
                double longueur = currentCircuitEuc.calculateCircuitLength(meilleur);

                System.out.println("Meilleur circuit glouton :");
                for (Coord c : meilleur) {
                    System.out.println(c.getId());
                }
                System.out.printf("Longueur : %.2f\n", longueur);


            } else if (mapGeo.isOpen()) {
                List<CoordGeo> meilleur = currentCircuitGeo.bestGreedyAlgorithm();
                double longueur = currentCircuitGeo.calculateCircuitLength(meilleur);

                System.out.println("Meilleur circuit glouton :");
                for (Coord c : meilleur) {
                    System.out.println(c.getId());
                }
                System.out.printf("Longueur : %.2f\n", longueur);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private String fileType(String path) {
        String[] line;
        try (Scanner scanner = new Scanner(new FileInputStream(path))) {
            do {
                line = scanner.nextLine().split("\\s*:\\s+");
                if (line.length == 0) {
                    throw new IOException();
                }

                if (line[0].equals("EDGE_WEIGHT_TYPE"))
                    return line[1];
            }
            while (!line[0].equals("NODE_COORD_SECTION") && !line[0].equals("EOF"));

        } catch (IOException e) {
            return "ERREUR";
        }

        return "ERREUR";
    }
    
    public void closeMap() {
        if (mapGeo.isOpen()) {
            mapGeo.close();
        }

        if (mapEuc.isOpen()) {
            mapEuc.close();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    private CircuitEuc currentCircuitEuc;
    private CircuitGeo currentCircuitGeo;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel algorithmPanel;
    private javax.swing.JMenuItem closeFileMenuItem;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JPanel distancePanel;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idValueLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JSplitPane mainPane;
    private view.MapEuc mapEuc;
    private view.MapGeo mapGeo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openFileMenuItem;
    private javax.swing.JMenuItem resetMenuItem;
    private java.awt.Label scaleLabel;
    private javax.swing.JSplitPane sidePanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JMenu windowMenu;
    private javax.swing.JTextField xField;
    private javax.swing.JLabel xLabel;
    private javax.swing.JTextField yField;
    private javax.swing.JLabel yLabel;
    private javax.swing.JPanel zoomLabelPanel;
    // End of variables declaration//GEN-END:variables
}
