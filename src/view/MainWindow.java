/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/ /Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.io.IOException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import java.io.FileInputStream;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.circuit.CircuitEuc;
import model.circuit.CircuitGeo;
import model.coord.CoordEuc;
import view.waypoint.Waypoint;

/**
 *
 * @author ugola
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        Waypoint.loadImage();
        initComponents();
        tableModel = new DefaultTableModel() ;
        distanceTable.setModel(tableModel);
        distanceTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        mainPane.resetToPreferredSizes();
        sidePanel.resetToPreferredSizes();
        
        mapEuc.addWaypointSelectionListener(waypoint -> {
            CoordEuc coord = (CoordEuc) waypoint.getCoord();
            idValueField.setText(String.valueOf(coord.getId()));
            firstCompField.setText(String.valueOf(coord.getX()));
            secondCompField.setText(String.valueOf(coord.getY()));
        });
    }
    
    enum ActionMode {
        SELECT,
        ADD,
        REMOVE
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mainPane = new javax.swing.JSplitPane();
        layeredPane = new javax.swing.JLayeredPane();
        toolBar = new javax.swing.JPanel();
        selectToolBt = new javax.swing.JButton();
        addToolBt = new javax.swing.JButton();
        removeToolBt = new javax.swing.JButton();
        mapGeo = new view.MapGeo();
        mapEuc = new view.MapEuc();
        zoomLabelPanel = new javax.swing.JPanel();
        scaleLabel = new java.awt.Label();
        sidePanel = new javax.swing.JSplitPane();
        tabbedPane = new javax.swing.JTabbedPane();
        algorithmPanel = new javax.swing.JPanel();
        randomButton = new javax.swing.JButton();
        greedyButton = new javax.swing.JButton();
        insertionButton = new javax.swing.JButton();
        distancePanel = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        distanceTable = new javax.swing.JTable();
        detailsPanel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        firstCompLabel = new javax.swing.JLabel();
        secondCompLabel = new javax.swing.JLabel();
        firstCompField = new javax.swing.JTextField();
        secondCompField = new javax.swing.JTextField();
        idValueField = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openFileMenuItem = new javax.swing.JMenuItem();
        closeFileMenuItem = new javax.swing.JMenuItem();
        windowMenu = new javax.swing.JMenu();
        resetMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fête des Lumières");

        mainPane.setDividerLocation(700);
        mainPane.setResizeWeight(0.7);

        selectToolBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/select_tool.png"))); // NOI18N
        selectToolBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectToolBtActionPerformed(evt);
            }
        });
        toolBar.add(selectToolBt);

        addToolBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/add_tool.png"))); // NOI18N
        addToolBt.setToolTipText("");
        addToolBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToolBtActionPerformed(evt);
            }
        });
        toolBar.add(addToolBt);

        removeToolBt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/remove_tool.png"))); // NOI18N
        removeToolBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeToolBtActionPerformed(evt);
            }
        });
        toolBar.add(removeToolBt);

        mapGeo.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                mapGeoMouseWheelMoved(evt);
            }
        });
        mapGeo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mapGeoMouseReleased(evt);
            }
        });

        mapEuc.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                mapEucMouseWheelMoved(evt);
            }
        });
        mapEuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mapEucMouseReleased(evt);
            }
        });

        zoomLabelPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        scaleLabel.setAlignment(java.awt.Label.CENTER);
        scaleLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        scaleLabel.setText("x 1.0");

        javax.swing.GroupLayout zoomLabelPanelLayout = new javax.swing.GroupLayout(zoomLabelPanel);
        zoomLabelPanel.setLayout(zoomLabelPanelLayout);
        zoomLabelPanelLayout.setHorizontalGroup(
            zoomLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 63, Short.MAX_VALUE)
            .addGroup(zoomLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scaleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
        );
        zoomLabelPanelLayout.setVerticalGroup(
            zoomLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
            .addGroup(zoomLabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scaleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scaleLabel.getAccessibleContext().setAccessibleParent(layeredPane);

        layeredPane.setLayer(toolBar, javax.swing.JLayeredPane.PALETTE_LAYER);
        layeredPane.setLayer(mapGeo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPane.setLayer(mapEuc, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPane.setLayer(zoomLabelPanel, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout layeredPaneLayout = new javax.swing.GroupLayout(layeredPane);
        layeredPane.setLayout(layeredPaneLayout);
        layeredPaneLayout.setHorizontalGroup(
            layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(605, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapGeo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapEuc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layeredPaneLayout.createSequentialGroup()
                    .addGap(0, 601, Short.MAX_VALUE)
                    .addComponent(zoomLabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layeredPaneLayout.setVerticalGroup(
            layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(576, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapGeo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mapEuc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layeredPaneLayout.createSequentialGroup()
                    .addGap(0, 596, Short.MAX_VALUE)
                    .addComponent(zoomLabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        mainPane.setLeftComponent(layeredPane);

        sidePanel.setDividerLocation(325);
        sidePanel.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        sidePanel.setResizeWeight(0.6);
        sidePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        randomButton.setText("Aleatoire");
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        greedyButton.setText("Glouton");
        greedyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greedyButtonActionPerformed(evt);
            }
        });

        insertionButton.setText("Insertion");
        insertionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout algorithmPanelLayout = new javax.swing.GroupLayout(algorithmPanel);
        algorithmPanel.setLayout(algorithmPanelLayout);
        algorithmPanelLayout.setHorizontalGroup(
            algorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(algorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(randomButton)
                    .addComponent(greedyButton)
                    .addComponent(insertionButton))
                .addContainerGap(283, Short.MAX_VALUE))
        );
        algorithmPanelLayout.setVerticalGroup(
            algorithmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(algorithmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(randomButton)
                .addGap(18, 18, 18)
                .addComponent(greedyButton)
                .addGap(18, 18, 18)
                .addComponent(insertionButton)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Algorithmes", algorithmPanel);

        distanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableScrollPane.setViewportView(distanceTable);

        javax.swing.GroupLayout distancePanelLayout = new javax.swing.GroupLayout(distancePanel);
        distancePanel.setLayout(distancePanelLayout);
        distancePanelLayout.setHorizontalGroup(
            distancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
        );
        distancePanelLayout.setVerticalGroup(
            distancePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Tableau des distances", distancePanel);

        sidePanel.setLeftComponent(tabbedPane);
        tabbedPane.getAccessibleContext().setAccessibleName("tabbedPane");

        detailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Détails du lieu"));
        detailsPanel.setName("Détails"); // NOI18N
        detailsPanel.setLayout(new java.awt.GridBagLayout());

        idLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idLabel.setText("ID :");
        idLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(idLabel, gridBagConstraints);

        firstCompLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        firstCompLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstCompLabel.setText("X :");
        firstCompLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(firstCompLabel, gridBagConstraints);

        secondCompLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        secondCompLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondCompLabel.setText("Y :");
        secondCompLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(secondCompLabel, gridBagConstraints);

        firstCompField.setEditable(false);
        firstCompField.setColumns(3);
        firstCompField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        firstCompField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        firstCompField.setText("0");
        firstCompField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        firstCompField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstCompFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(firstCompField, gridBagConstraints);

        secondCompField.setEditable(false);
        secondCompField.setColumns(3);
        secondCompField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        secondCompField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        secondCompField.setText("0");
        secondCompField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(secondCompField, gridBagConstraints);

        idValueField.setEditable(false);
        idValueField.setColumns(3);
        idValueField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        idValueField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idValueField.setText("0");
        idValueField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        detailsPanel.add(idValueField, gridBagConstraints);

        sidePanel.setRightComponent(detailsPanel);

        mainPane.setRightComponent(sidePanel);

        fileMenu.setText("Fichier");

        openFileMenuItem.setText("Ouvrir une carte");
        openFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openFileMenuItem);

        closeFileMenuItem.setText("Fermer la carte");
        closeFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeFileMenuItem);

        menuBar.add(fileMenu);

        windowMenu.setText("Fenêtre");

        resetMenuItem.setText("Réinitialiser");
        resetMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(resetMenuItem);

        menuBar.add(windowMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileMenuItemActionPerformed
        JFileChooser selectionWindow = new JFileChooser();
        selectionWindow.showOpenDialog(mainPane);

        if (selectionWindow.getSelectedFile() != null) {
            String path = selectionWindow.getSelectedFile().getAbsolutePath();
            String type = fileType(path);
            closeMap();

            int coordsCount;
            String[] columnsNames;

            switch (type) {
                case "EUC_2D":
                    currentCircuitEuc = new CircuitEuc();
                    currentCircuitEuc.loadFile(path);
                    mapEuc.open(currentCircuitEuc);
                    SwingUtilities.invokeLater(() -> {
                        if (mapGeo != null)
                            if (mapGeo.isVisible()) {
                                mapGeo.setVisible(false);
                            }
                        
                        mapEuc.setVisible(true);
                        mainPane.repaint();
                    });

                    // Modification de la distanceTable
                    coordsCount = currentCircuitEuc.getCoords().size();
                    // Création des noms de colonnes
                    columnsNames = new String[coordsCount + 1];
                    columnsNames[0] = ""; // coin vide
                    for (int i = 0; i < coordsCount; i++) {
                        columnsNames[i + 1] = "Lieu " + (i + 1);
                    }

                    tableModel.setDataVector(currentCircuitEuc.createDistanceMatrix(), columnsNames);
                    
                    // Modification du panneau des détails
                    firstCompLabel.setText("X :");
                    secondCompLabel.setText("Y :");
                    
                    break;

                case "GEO":
                    currentCircuitGeo = new CircuitGeo();
                    currentCircuitGeo.loadFile(path);
                    mapGeo.open(currentCircuitGeo);
                    SwingUtilities.invokeLater(() -> {
                        if (mapEuc != null)
                            if (mapEuc.isVisible()) {
                                mapEuc.setVisible(false);
                            }
                        
                        mapGeo.setVisible(true);
                        mainPane.repaint();
                    });
                    
                    // Modification de la distanceTable
                    coordsCount = currentCircuitGeo.getCoords().size();
                    // Création des noms de colonnes
                    columnsNames = new String[coordsCount + 1];
                    columnsNames[0] = ""; // coin vide
                    for (int i = 0; i < coordsCount; i++) {
                        columnsNames[i + 1] = "Lieu " + (i + 1);
                    }

                    tableModel.setDataVector(currentCircuitGeo.createDistanceMatrix(), columnsNames);
                    
                    // Modification du panneau des détails
                    firstCompLabel.setText("Latitude :");
                    secondCompLabel.setText("Longitude :");
                    
                    break;
                    
                default: JOptionPane.showMessageDialog(mainPane, "Le type de fichier n'est pas pris en charge", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_openFileMenuItemActionPerformed

    private void closeFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFileMenuItemActionPerformed
        closeMap();
    }//GEN-LAST:event_closeFileMenuItemActionPerformed

    private void mapEucMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_mapEucMouseWheelMoved
        scaleLabel.setText("x " + String.format("%.1f", mapEuc.getScale()));
    }//GEN-LAST:event_mapEucMouseWheelMoved

    private void resetMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetMenuItemActionPerformed
        mainPane.resetToPreferredSizes();
        sidePanel.resetToPreferredSizes();
    }//GEN-LAST:event_resetMenuItemActionPerformed

    private void mapGeoMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_mapGeoMouseWheelMoved
        scaleLabel.setText("x " + String.format("%.1f", mapGeo.getScale()));
    }//GEN-LAST:event_mapGeoMouseWheelMoved

    private void mapGeoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapGeoMouseReleased

    }//GEN-LAST:event_mapGeoMouseReleased

    private void firstCompFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstCompFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstCompFieldActionPerformed

    private void mapEucMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapEucMouseReleased

    }//GEN-LAST:event_mapEucMouseReleased

    private void greedyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greedyButtonActionPerformed
        if (mapEuc.isOpen()) {
            currentCircuitEuc.bestGreedyAlgorithm();
            mapEuc.repaint();
        }
        if (mapGeo.isOpen()) {
            currentCircuitGeo.bestGreedyAlgorithm();
            mapGeo.repaint();
        }
    }//GEN-LAST:event_greedyButtonActionPerformed

    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomButtonActionPerformed
        if (mapEuc.isOpen()) {
            currentCircuitEuc.randomAlgorithm();
            mapEuc.repaint();
        }
        if (mapGeo.isOpen()) {
            currentCircuitGeo.randomAlgorithm();
            mapGeo.repaint();
        }
    }//GEN-LAST:event_randomButtonActionPerformed

    private void selectToolBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectToolBtActionPerformed
        actionMode = ActionMode.SELECT;
    }//GEN-LAST:event_selectToolBtActionPerformed

    private void insertionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertionButtonActionPerformed
        if (mapEuc.isOpen()) {
            currentCircuitEuc.bestInsertionAlgorithm();
            mapEuc.repaint();
        }
        if (mapGeo.isOpen()) {
            currentCircuitGeo.bestInsertionAlgorithm();
            mapGeo.repaint();
        }
    }//GEN-LAST:event_insertionButtonActionPerformed

    private void addToolBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToolBtActionPerformed
        actionMode = ActionMode.ADD;
    }//GEN-LAST:event_addToolBtActionPerformed

    private void removeToolBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeToolBtActionPerformed
        actionMode = ActionMode.REMOVE;
    }//GEN-LAST:event_removeToolBtActionPerformed

    private String fileType(String path) {
        String[] line;
        try (Scanner scanner = new Scanner(new FileInputStream(path))) {
            do {
                line = scanner.nextLine().split("\\s*:\\s+");
                if (line.length == 0) {
                    throw new IOException();
                }

                if (line[0].equals("EDGE_WEIGHT_TYPE"))
                    return line[1];
            }
            while (!line[0].equals("NODE_COORD_SECTION") && !line[0].equals("EOF"));

        } catch (IOException e) {
            return "ERREUR";
        }

        return "ERREUR";
    }
    
    public void closeMap() {
        if (mapGeo.isOpen()) {
            mapGeo.close();
        }

        if (mapEuc.isOpen()) {
            mapEuc.close();
        }
        
        tableModel.setRowCount(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }
    
    private CircuitEuc currentCircuitEuc;
    private CircuitGeo currentCircuitGeo;
    private DefaultTableModel tableModel ;
    private ActionMode actionMode;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToolBt;
    private javax.swing.JPanel algorithmPanel;
    private javax.swing.JMenuItem closeFileMenuItem;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JPanel distancePanel;
    private javax.swing.JTable distanceTable;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextField firstCompField;
    private javax.swing.JLabel firstCompLabel;
    private javax.swing.JButton greedyButton;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idValueField;
    private javax.swing.JButton insertionButton;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JSplitPane mainPane;
    private view.MapEuc mapEuc;
    private view.MapGeo mapGeo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openFileMenuItem;
    private javax.swing.JButton randomButton;
    private javax.swing.JButton removeToolBt;
    private javax.swing.JMenuItem resetMenuItem;
    private java.awt.Label scaleLabel;
    private javax.swing.JTextField secondCompField;
    private javax.swing.JLabel secondCompLabel;
    private javax.swing.JButton selectToolBt;
    private javax.swing.JSplitPane sidePanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JPanel toolBar;
    private javax.swing.JMenu windowMenu;
    private javax.swing.JPanel zoomLabelPanel;
    // End of variables declaration//GEN-END:variables
}
